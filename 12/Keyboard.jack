// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	/** Memory the basic address. */
	static Array keyboard;

    /** Initializes the keyboard. */
    function void init() {
		/** Initializes the basic address. */
		let keyboard = 24576;
		return;
	}	

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		/** Whatever there has input char or no-input, just return the unit value. */
		return keyboard[0];
	}

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c;
		
		/** If there is no input, blocking... */
		while(Keyboard.keyPressed()=0){}
		
		let c = Keyboard.keyPressed();
		/** Until the key is released. */
		while(~(Keyboard.keyPressed()=0)){}
		
		/** There is something inputed. Print it. */
		do Output.printChar(c);
		return c;
		
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String line;
		var char c;
		
		/** Print the promote message. */
		do Output.printString(message);
		
		/** Apply a buffer. */
		let line = String.new(50);
		
		let c = Keyboard.readChar();
		/** Reading. Until user inputs a "enter". */
		while(~(c=String.newLine())){
			/** If user input a backspace. */
			if(c=String.backSpace()){
				do line.eraseLastChar();
			}else{
				do line.appendChar(c);
			}
			let c = Keyboard.readChar();
		}
		return line;
		
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String line;

		/** Displays the message on the screen. */
		/** Reads from keyboard the entered text. */
		let line = Keyboard.readLine(message);
		return line.intValue();
		
    }
}
